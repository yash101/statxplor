/**
 * Simulation engine, v1 (actually v2, v1 was generated by an LLM this is the good stuff)
 */

import type { Connection, Edge, Node } from "reactflow";
import type { CustomNodeProps } from "../components/CustomNode";

export type SimNode = {
  id: string;
  hits: number;
  probabilities: {
    p: number;
    hits: number;
    next: SimNode | null;
  }
}

export class SimulationEngine {
  // private customNodes: CustomNodeProps;
  // private simNodeRoot: SimNode;

//   constructor(customNodes: CustomNodeProps) {
//     // this.customNodes = customNodes;
//     // this.simNodeRoot = this.buildSimTree();
//   }

//   private buildSimTree(nodes: Node[], edges: Edge[], connections: Connection[]): SimNode {
//     const visitedNodes = new Set<string>();

//     // DFS or BFS? BFS cus scalability and i hate myself

//     // TODO
//     return {
//       id: 'root',
//       hits: 0,
//       probabilities: [
//       ]
//     };
//   }

//   private getResults(): any {
//   }
// }
